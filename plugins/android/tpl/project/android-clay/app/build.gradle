import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.application'

android {
    compileSdkVersion 31
    buildToolsVersion '31.0.0'

    defaultConfig {
        applicationId "mycompany.myapp"
        minSdkVersion 21
        targetSdkVersion 31
        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a" /*, "x86", "x86_64"*/
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
        debug {
            jniDebuggable true
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/bind/java'
    }
}

task haxeBuildRelease(type: Exec) {
    workingDir '..'

    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        commandLine './build-haxe.cmd', '--archs', 'armv7,arm64' //,x86,x86_64'
    }
    else {
        commandLine './build-haxe.sh', '--archs', 'armv7,arm64' //,x86,x86_64'
    }
}

task haxeBuildDebug(type: Exec) {
    workingDir '..'

    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        commandLine './build-haxe.cmd', '--debug', '--archs', 'armv7,arm64' //,x86,x86_64'
    }
    else {
        commandLine './build-haxe.sh', '--debug', '--archs', 'armv7,arm64' //,x86,x86_64'
    }
}

tasks.whenTaskAdded { task ->
    if (task.name == 'packageDebug' || task.name == 'generateDebugSources') {
        task.dependsOn haxeBuildDebug
    }
    else if (task.name == 'packageRelease' || task.name == 'generateReleaseSources') {
        task.dependsOn haxeBuildRelease
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}
